# DataSource settings: set here your own configurations for the database
# connection.
spring.datasource.url = jdbc:mysql://xxxxxx.amazonaws.com:3306/vehicledb
spring.datasource.username = admin
spring.datasource.password = xxxxx

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#api username and password
#security.user.name = admin
#security.user.password = xxxxx


#ip and port
server.ip=0.0.0.0
server.port: 5001

#ssl settings
security.require-ssl=true
server.ssl.key-store:/etc/letsencrypt/live/autofinder.tk/keystore.p12
server.ssl.key-store-password:xxxxxxx
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat

logging.file= ./api.log
